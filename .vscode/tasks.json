{
    "version": "2.0.0",
    "windows": {
      "options": {
        "shell": {
          "executable": "bash.exe",
          "args": ["-c"]
        }
      }
    },
    "tasks": [
      {
        "label": "build on WSL",
        "type": "shell",
        "command": "g++",
        "args": [
            "-g",
            "-o",
            "${workspaceFolder}/bin/challenge.out",
            "'${workspaceFolder}/src/${fileBasename}'",
        //   "-L/usr/local/lib -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dnn_superres -lopencv_dpm -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_intensity_transform -lopencv_line_descriptor -lopencv_mcc -lopencv_quality -lopencv_rapid -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_signal -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_highgui -lopencv_datasets -lopencv_text -lopencv_plot -lopencv_videostab -lopencv_videoio -lopencv_wechat_qrcode -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_video -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_dnn -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core"
            // "`pkg-config --cflags --libs opencv4`",
            "-L", "/usr/local/lib",
            "-l", "opencv_core",
            "-l", "opencv_videoio",
            "-l", "opencv_imgproc",
            "-l", "opencv_highgui",
            "-l", "opencv_imgcodecs",
        ],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": [
            "$gcc"
        ]
      },
      {
        "label": "run on WSL",
        "type": "shell",
        "command": "${workspaceFolder}/bin/challenge.out",
        "group": {
            "kind": "build",
            "isDefault": true
        },
        "problemMatcher": [
            "$gcc"
        ]
        }
    ]
}
